name: validate
on:
  push:
  pull_request:

jobs:

  commit:
    runs-on: ubuntu-20.04
    # Only check commits on pull requests.
    if: github.event_name == 'pull_request'
    steps:
      - name: get pr commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: check subject line length
        uses: tim-actions/commit-message-checker-with-regex@v0.3.1
        with:
          commits: ${{ steps.get-pr-commits.outputs.commits }}
          pattern: '^.{0,72}(\n.*)*$'
          error: 'Subject too long (max 72)'

  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2
        with:
          # must be specified without patch version
          version: v1.36
          # Only show new issues for a pull request.
          only-new-issues: true

  cross:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: cross
      run: make build-cross
      
  test:
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.14.x, 1.15.x, 1.16.0-rc1]
        rootless: ["rootless", ""]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: install go ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        stable: '!contains(${{ matrix.go-version }}, "beta") && !contains(${{ matrix.go-version }}, "rc")'
        go-version: ${{ matrix.go-version }}

    - name: build
      run: make build

    - name: test
      run: make test
